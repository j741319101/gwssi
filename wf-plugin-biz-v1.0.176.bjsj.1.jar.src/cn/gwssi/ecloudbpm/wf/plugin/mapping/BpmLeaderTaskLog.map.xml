<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dstz.bpm.plugin.core.dao.BpmLeaderTaskLogDao">
	<resultMap id="BpmLeaderTaskLog" type="com.dstz.bpm.plugin.core.model.BpmLeaderTaskLog">
		<id property="id" column="id_" jdbcType="VARCHAR"/>
		<result property="taskId" column="task_id_" jdbcType="VARCHAR"/>
		<result property="instId" column="inst_id_" jdbcType="VARCHAR"/>
		<result property="approverId" column="approver_id_" jdbcType="VARCHAR"/>
		<result property="approverName" column="approver_name_" jdbcType="VARCHAR"/>
		<result property="orgId" column="org_id_" jdbcType="VARCHAR"/>
		<result property="leaderId" column="leader_id_" jdbcType="VARCHAR"/>
		<result property="leaderName" column="leader_name_" jdbcType="VARCHAR"/>
		<result property="flag" column="flag_" jdbcType="VARCHAR"/>
		<result property="type" column="type_" jdbcType="VARCHAR"/>
		<result property="createBy" column="create_by_" jdbcType="VARCHAR"/>
		<result property="createTime" column="create_time_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="update_by_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="update_time_" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<insert id="create" parameterType="com.dstz.bpm.plugin.core.model.BpmLeaderTaskLog">
		INSERT INTO bpm_leader_task_log
		(id_,
		task_id_,
		inst_id_,
		approver_id_,
		approver_name_,
		org_id_,
		leader_id_,
		leader_name_,
		flag_,
		type_,
		create_by_,
		create_time_,
		update_by_,
		update_time_)
		VALUES 
		(#{id,jdbcType=VARCHAR},
		#{taskId,jdbcType=VARCHAR},
		#{instId,jdbcType=VARCHAR},
		#{approverId,jdbcType=VARCHAR},
		#{approverName,jdbcType=VARCHAR},
		#{orgId,jdbcType=VARCHAR},
		#{leaderId,jdbcType=VARCHAR},
		#{leaderName,jdbcType=VARCHAR},
		#{flag,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{createBy,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateBy,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmLeaderTaskLog">
		SELECT * FROM bpm_leader_task_log
		WHERE 
		id_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmLeaderTaskLog">
		SELECT * FROM bpm_leader_task_log
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY id_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.dstz.bpm.plugin.core.model.BpmLeaderTaskLog">
		UPDATE bpm_leader_task_log
		<set>
			<if test="taskId != null">
				task_id_=#{taskId,jdbcType=VARCHAR},
			</if>
			<if test="instId != null">
				inst_id_=#{instId,jdbcType=VARCHAR},
			</if>
			<if test="approverId != null">
				approver_id_=#{approverId,jdbcType=VARCHAR},
			</if>
			<if test="approverName != null">
				approver_name_=#{approverName,jdbcType=VARCHAR},
			</if>
			<if test="leaderId != null">
				leader_id_=#{leaderId,jdbcType=VARCHAR},
			</if>
			<if test="leaderName != null">
				leader_name_=#{leaderName,jdbcType=VARCHAR},
			</if>
			<if test="flag != null">
				flag_=#{flag,jdbcType=VARCHAR},
			</if>
			<if test="flag != null">
				type_=#{type,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				create_by_=#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time_=#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by_=#{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time_=#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		WHERE
		id_=#{id}
	</update>

	<update id="updateByTaskId" parameterType="com.dstz.bpm.plugin.core.model.BpmLeaderTaskLog">
		UPDATE bpm_leader_task_log
		<set>
			<if test="taskLog.flag != null">
				flag_=#{taskLog.flag,jdbcType=VARCHAR},
			</if>
			<if test="taskLog.approverId != null">
				approver_id_=#{taskLog.approverId,jdbcType=VARCHAR},
			</if>
			<if test="taskLog.approverName != null">
				approver_name_=#{taskLog.approverName,jdbcType=VARCHAR},
			</if>
			<if test="taskLog.createBy != null">
				create_by_=#{taskLog.createBy,jdbcType=VARCHAR},
			</if>
			<if test="taskLog.createTime != null">
				create_time_=#{taskLog.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskLog.updateBy != null">
				update_by_=#{taskLog.updateBy,jdbcType=VARCHAR},
			</if>
			<if test="taskLog.updateTime != null">
				update_time_=#{taskLog.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		WHERE
		task_id_=#{taskLog.taskId} and type_ = #{taskLog.type}
	</update>
	<select id="getByTaskId" parameterType="java.lang.String" resultMap="BpmLeaderTaskLog">
		SELECT * FROM bpm_leader_task_log
		WHERE
		task_id_= #{taskId}
	</select>
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM bpm_leader_task_log
		WHERE
		id_=#{id}
	</delete>

	<delete id="removeByInstId" parameterType="java.lang.String">
		DELETE FROM bpm_leader_task_log
		WHERE
		inst_id_ =#{instId}
	</delete>
	<resultMap id="BpmTaskVO" type="BpmTaskVO">
		<id property="id" column="id_" jdbcType="VARCHAR"/>
		<result property="name" column="name_" jdbcType="VARCHAR"/>
		<result property="subject" column="subject_" jdbcType="VARCHAR"/>
		<result property="instId" column="inst_id_" jdbcType="VARCHAR"/>
		<result property="taskId" column="task_id_" jdbcType="VARCHAR"/>
		<result property="nodeId" column="node_id_" jdbcType="VARCHAR"/>
		<result property="defId" column="def_id_" jdbcType="VARCHAR"/>
		<result property="assigneeId" column="assignee_id_" jdbcType="VARCHAR"/>
		<result property="assigneeNames" column="assignee_names_" jdbcType="VARCHAR"/>
		<result property="status" column="status_" jdbcType="VARCHAR"/>
		<result property="priority" column="priority_" jdbcType="NUMERIC"/>
		<result property="dueTime" column="due_time_" jdbcType="TIMESTAMP"/>
		<result property="taskType" column="task_type_" jdbcType="VARCHAR"/>
		<result property="parentId" column="parent_id_" jdbcType="VARCHAR"/>
		<result property="actInstId" column="act_inst_id_" jdbcType="VARCHAR"/>
		<result property="actExecutionId" column="act_execution_id_" jdbcType="VARCHAR"/>
		<result property="typeId" column="type_id_" jdbcType="VARCHAR"/>
		<result property="createTime" column="create_time_" jdbcType="TIMESTAMP"/>
		<result property="createBy" column="create_by_" jdbcType="VARCHAR"/>
		<result property="supportMobile" column="support_mobile_" jdbcType="NUMERIC"/>
		<result property="backNode" column="back_node_" jdbcType="VARCHAR"/>
		<result property="creator" column="creator_" jdbcType="VARCHAR"/>
		<result property="checkTime" column="check_time_" jdbcType="TIMESTAMP"/>
		<result property="checkStatus" column="check_status_" jdbcType="VARCHAR"/>
		<result property="linkId" column="link_id_" jdbcType="VARCHAR"/>
		<result property="instStatus" column="inst_status_" jdbcType="VARCHAR"/>
		<result property="linkTaskType" column="link_task_type_" jdbcType="VARCHAR"/>
		<result property="docNum" column="doc_num_" jdbcType="VARCHAR"/>
		<result property="zbsj" column="zbsj_" jdbcType="VARCHAR"/>
		<result property="instCreateTime" column="inst_create_time_" jdbcType="VARCHAR"/>
		<result property="instName" column="inst_name_" jdbcType="VARCHAR"/>
		<result property="nodeTypeKey" column="node_type_key_" jdbcType="VARCHAR"/>
		<result property="nodeTypeName" column="node_type_name_" jdbcType="VARCHAR"/>
		<result property="sendLeaderFlag" column="send_leader_flag_" jdbcType="VARCHAR"/>
	</resultMap>
	<select id="getTodoList" parameterType="java.util.Map" resultMap="BpmTaskVO">
		SELECT DISTINCT task.*,instance.creator_,instance.STATUS_ inst_status_,
		instance.CREATE_TIME_ inst_create_time_,
		instance.def_name_ inst_name_,
		linkd.check_status_,linkd.check_time_,
		node.KEY_ node_type_key_,
		node.NAME_ node_type_name_,
		linkd.id_ link_id_,linkd.task_type_ link_task_type_,
		leader.flag_ send_leader_flag_
		FROM bpm_task task
		LEFT JOIN bpm_task_identitylink linkd on task.id_ = linkd.task_id_
		LEFT JOIN bpm_instance instance on task.inst_id_ = instance.id_
		LEFT JOIN SYS_TREE_NODE node on task.TYPE_ID_ = node.ID_
		INNER JOIN bpm_leader_task_log leader ON leader.task_id_ = task.id_ and leader.type_ = '1'
		<if test="supportMobile">
			inner join bpm_definition def on task.def_id_ = def.id_ and def.support_mobile_ = '1'
		</if>
		<if test="industryTable!=null">
			inner join bpm_bus_link buslink ON task.inst_id_ = buslink.inst_id_
			inner join ${industryTable} e ON buslink.biz_id_ = e.${industryPKColumn}
		</if>
		<if test="supportMobile">
			inner join bpm_definition def on task.def_id_ = def.id_ and def.support_mobile_ = '1'
		</if>
		<if test="industryTable!=null">
			inner join bpm_bus_link buslink ON task.inst_id_ = buslink.inst_id_
			inner join ${industryTable} e ON buslink.biz_id_ = e.${industryPKColumn}
		</if>
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY priority_ DESC, task.id_ DESC
		</if>
	</select>

	<select id="getApproveHistoryList" parameterType="java.util.Map" resultType="BpmTaskApprove">
		select
		inst.id_ id,
		inst.subject_ subject,
		inst.def_name_ defName,
		inst.status_ status,
		inst.creator_ creator,
		inst.create_time_ createTime,
		end_time_ endTime,
		duration_ duration,
		inst.type_id_ typeId,
		o.task_name_ nodeName,
		o.task_key_ nodeId,
		o.approve_time_ approveTime,
		o.status_ approveStatus,
		node.NAME_ nodeTypeName,
		node.KEY_ nodeTypeKey,
		o.dur_ms_ durMs,
		(select count(1) from BPM_PLUGIN_REMINDER_LOG remind where remind.INSTANCE_ID_ = inst.ID_ and remind.from_userids_ = o.CREATE_BY_) remindNum,
		(SELECT listagg(task.name_,',') WITHIN GROUP(ORDER BY task.ID_) FROM bpm_task task WHERE inst.id_ = task.inst_id_ AND task.task_type_ != 'SIGN') taskNames,
		(SELECT listagg(task.assignee_names_,',') WITHIN GROUP(ORDER BY task.id_) FROM bpm_task task WHERE task.inst_id_ = inst.id_ and task.task_type_ != 'SIGN_SOURCE') taskUsers
		from bpm_task_opinion o
		INNER JOIN bpm_instance inst on o.inst_id_ = inst.id_
		LEFT JOIN SYS_TREE_NODE node on inst.TYPE_ID_ = node.ID_
		INNER JOIN  bpm_leader_task_log leader ON leader.task_id_ = o.TASK_ID_ and leader.type_ = '1'
		<if test="supportMobile">
			inner join bpm_definition def on inst.def_id_ = def.id_ and def.support_mobile_ = '1'
		</if>
		where o.status_ not in ('start','skip','end')
		<if test="whereSql!=null">
			and ${whereSql}
		</if>
		<if test="taskUsers!=null or taskNames!=null">
			and exists (select 1 from bpm_task bpmtask where bpmtask.inst_id_ = inst.id_
			<if test="taskUsers!=null">
				and bpmtask.assignee_names_ like '%${taskUsers}%'
			</if>
			<if test="taskNames!=null">
				and bpmtask.name_ like '%${taskNames}%'
			</if>
			)
		</if>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY o.id_ DESC
		</if>
	</select>

	<select id="listUserReceive" resultType="com.dstz.bpm.plugin.vo.BpmUserReceiveCarbonCopyRecordVO">
		SELECT
		a.id_               AS id,
		b.id_               AS recordId,
		b.inst_id           AS instId,
		b.subject           AS subject,
		b.node_id           AS nodeid,
		b.node_name         AS nodename,
		b.task_id           AS taskid,
		b.form_type         AS formType,
		b.event_            AS event,
		b.trigger_user_id   AS triggeruserid,
		b.trigger_user_name AS triggerusername,
		a.create_time_      AS receivetime,
		a.read_             AS "read",
		(SELECT listagg(task.name_,',') WITHIN GROUP(ORDER BY task.ID_) FROM bpm_task task WHERE inst.id_ = task.inst_id_ AND task.task_type_ != 'SIGN') taskNames,
		(SELECT listagg(task.assignee_names_,',') WITHIN GROUP(ORDER BY task.id_) FROM bpm_task task WHERE task.inst_id_ = inst.id_ and task.task_type_ != 'SIGN_SOURCE') taskUsers,
		inst.status_ AS status,
		inst.def_name_ defName,
		inst.creator_ creator,
		inst.create_time_ instCreateTime,
		node.key_ nodeTypeKey,
		node.name_ nodeTypeName,
		b.content  content,
		leader.flag_ send_leader_flag_
		FROM bpm_plugin_carbon_copy_receive a
		INNER JOIN bpm_plugin_carbon_copy_record b ON b.id_ = a.cc_record_id
		INNER JOIN bpm_instance inst on b.inst_id = inst.id_
		INNER JOIN bpm_leader_task_log leader ON leader.receive_id_ = a.id_ and leader.type_ = '2'
		LEFT JOIN SYS_TREE_NODE node on inst.TYPE_ID_ = node.ID_
		<where>
			<if test="whereSql!=null">
			   ${whereSql}
			</if>
			and a.type_ = 'LEADER'
			<if test="taskUsers!=null or taskNames!=null">
				and exists (select 1 from bpm_task bpmtask where bpmtask.inst_id_ = inst.id_
				<if test="taskUsers!=null">
					and bpmtask.assignee_names_ like '%${taskUsers}%'
				</if>
				<if test="taskNames!=null">
					and bpmtask.name_ like '%${taskNames}%'
				</if>
				)
			</if>
		</where>
		<if test="orderBySql==null">
			ORDER BY id DESC
		</if>
	</select>


</mapper>